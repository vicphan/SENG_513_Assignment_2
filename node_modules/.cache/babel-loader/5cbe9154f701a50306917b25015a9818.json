{"ast":null,"code":"var _jsxFileName = \"/Users/vicphan/Projects/SENG_513/SENG_513_Assignment_2/src/pages/components/pop_up.js\",\n  _s = $RefreshSig$();\nimport Popup from 'reactjs-popup';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopUp = _ref => {\n  _s();\n  let {\n    open_window,\n    winner_string,\n    player_names,\n    score\n  } = _ref;\n  const [open, set_open] = useState(open_window);\n  const calculateWinner = score => {\n    const allEqual = score[0] === score[1] && score[1] === score[2];\n    let winner_string = \"\";\n    if (allEqual) {\n      winner_string = \"Game over! It's a tie!\";\n    } else {\n      const [one, two, three] = score;\n      if (one === two && one > three) {\n        winner_string = \"Game over! Player 1 & 2 are tied!\";\n      } else if (two === three && two > one) {\n        winner_string = \"Game over! Player 2 & 3 are tied!\";\n      } else if (one === three && one > two) {\n        winner_string = \"Game over! Player 1 & 3 are tied!\";\n      } else {\n        let winner = score.indexOf(Math.max(...score)) + 1;\n        winner_string = \"Game over! Player \" + winner + \" wins!\";\n      }\n    }\n    return winner_string;\n  };\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    open: open,\n    modal: true,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close\",\n      onClick: () => set_open(false),\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info_text\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: calculateWinner(score)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info_text\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Final result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info_text\",\n        children: [player_names[0], \": \", score[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info_text\",\n        children: [player_names[1], \": \", score[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"info_text\",\n        children: [player_names[2], \": \", score[2]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(PopUp, \"Q0K+mNk2+C84IU+7jynCr3NvJhc=\");\n_c = PopUp;\nexport default PopUp;\nvar _c;\n$RefreshReg$(_c, \"PopUp\");","map":{"version":3,"names":["Popup","useState","PopUp","open_window","winner_string","player_names","score","open","set_open","calculateWinner","allEqual","one","two","three","winner","indexOf","Math","max"],"sources":["/Users/vicphan/Projects/SENG_513/SENG_513_Assignment_2/src/pages/components/pop_up.js"],"sourcesContent":["import Popup from 'reactjs-popup';\nimport { useState } from 'react';\n\nconst PopUp = ({ open_window, winner_string, player_names, score }) => {\n\n    const [open, set_open] = useState(open_window);\n\n    const calculateWinner = (score) => {\n        const allEqual = (score[0] === score[1] && score[1] === score[2]);\n        let winner_string = \"\";\n        if (allEqual) {\n            winner_string = \"Game over! It's a tie!\";\n        }\n        else {\n            const [one, two, three] = score;\n            if (one === two && one > three) {\n                winner_string = \"Game over! Player 1 & 2 are tied!\";\n            }\n            else if (two === three && two > one) {\n                winner_string = \"Game over! Player 2 & 3 are tied!\";\n            }\n            else if (one === three && one > two) {\n                winner_string = \"Game over! Player 1 & 3 are tied!\";\n            }\n            else {\n                let winner = score.indexOf(Math.max(...score)) + 1;\n                winner_string = \"Game over! Player \" + winner + \" wins!\";\n            }\n        }\n        return winner_string;\n    }\n\n    return (\n        <Popup open={open} modal>\n            <button className=\"close\" onClick={() => set_open(false)}>\n                &times;\n            </button>\n            <div className='modal'>\n                <p className='info_text'><b>{calculateWinner(score)}</b></p>\n                <p className='info_text'><em>Final result:</em></p>\n                <p className='info_text'>{player_names[0]}: {score[0]}</p>\n                <p className='info_text'>{player_names[1]}: {score[1]}</p>\n                <p className='info_text'>{player_names[2]}: {score[2]}</p>\n            </div>\n        </Popup>\n    )\n}\n\nexport default PopUp;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,eAAe;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,KAAK,GAAG,QAAyD;EAAA;EAAA,IAAxD;IAAEC,WAAW;IAAEC,aAAa;IAAEC,YAAY;IAAEC;EAAM,CAAC;EAE9D,MAAM,CAACC,IAAI,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACE,WAAW,CAAC;EAE9C,MAAMM,eAAe,GAAIH,KAAK,IAAK;IAC/B,MAAMI,QAAQ,GAAIJ,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAE;IACjE,IAAIF,aAAa,GAAG,EAAE;IACtB,IAAIM,QAAQ,EAAE;MACVN,aAAa,GAAG,wBAAwB;IAC5C,CAAC,MACI;MACD,MAAM,CAACO,GAAG,EAAEC,GAAG,EAAEC,KAAK,CAAC,GAAGP,KAAK;MAC/B,IAAIK,GAAG,KAAKC,GAAG,IAAID,GAAG,GAAGE,KAAK,EAAE;QAC5BT,aAAa,GAAG,mCAAmC;MACvD,CAAC,MACI,IAAIQ,GAAG,KAAKC,KAAK,IAAID,GAAG,GAAGD,GAAG,EAAE;QACjCP,aAAa,GAAG,mCAAmC;MACvD,CAAC,MACI,IAAIO,GAAG,KAAKE,KAAK,IAAIF,GAAG,GAAGC,GAAG,EAAE;QACjCR,aAAa,GAAG,mCAAmC;MACvD,CAAC,MACI;QACD,IAAIU,MAAM,GAAGR,KAAK,CAACS,OAAO,CAACC,IAAI,CAACC,GAAG,CAAC,GAAGX,KAAK,CAAC,CAAC,GAAG,CAAC;QAClDF,aAAa,GAAG,oBAAoB,GAAGU,MAAM,GAAG,QAAQ;MAC5D;IACJ;IACA,OAAOV,aAAa;EACxB,CAAC;EAED,oBACI,QAAC,KAAK;IAAC,IAAI,EAAEG,IAAK;IAAC,KAAK;IAAA,wBACpB;MAAQ,SAAS,EAAC,OAAO;MAAC,OAAO,EAAE,MAAMC,QAAQ,CAAC,KAAK,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhD,eACT;MAAK,SAAS,EAAC,OAAO;MAAA,wBAClB;QAAG,SAAS,EAAC,WAAW;QAAA,uBAAC;UAAA,UAAIC,eAAe,CAACH,KAAK;QAAC;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAI,eAC5D;QAAG,SAAS,EAAC,WAAW;QAAA,uBAAC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAI,eACnD;QAAG,SAAS,EAAC,WAAW;QAAA,WAAED,YAAY,CAAC,CAAC,CAAC,QAAIC,KAAK,CAAC,CAAC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1D;QAAG,SAAS,EAAC,WAAW;QAAA,WAAED,YAAY,CAAC,CAAC,CAAC,QAAIC,KAAK,CAAC,CAAC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1D;QAAG,SAAS,EAAC,WAAW;QAAA,WAAED,YAAY,CAAC,CAAC,CAAC,QAAIC,KAAK,CAAC,CAAC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEhB,CAAC;AAAA,GA3CKJ,KAAK;AAAA,KAALA,KAAK;AA6CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}